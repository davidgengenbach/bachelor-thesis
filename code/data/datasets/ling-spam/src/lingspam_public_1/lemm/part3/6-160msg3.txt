Subject: more on nlp

to the reader : i have recently send out several email inquiry to various list service that i subscribe to in an attempt to learn why we do not see more software that can relate to the complexity of human grammar . that be , i be try to learn why do n't we see better grammar checkers , more translation software , and more sophisticate language tutor software . if there be a theory of syntax that could be program at all would n't there also be a swarm of program be offer by researcher and graduate student from around the world ? would n't we be argue about the merit of " lfg - linguist 3 . 1 " v " gb - linguist 2 . 0 . " and would n't we be argue about the merit of one theory label bracket versus another 's ? further , other area that may use language interface such as game and program internal " help facility " be also quite primitive . grant , the difficulty of try to get a program to account for pro - - blem of mean have occupy programmer for year , but this in itself be not sufficient enough explanation for why we do not see more result in area that require a program to exhibit a sophisticate understand of the structure of human language . which bring me to the point of this query . to improve my understand of this problem and perhap to generate some meaningful dialog about this problem , i would like to propose the follow list of what we should minimally expect of a program or a theory of syntax that claim to be able to handle the structure of human language . i would like to invite reader to add to the list or to point out which area have already be adequately handle . if an area be adequately handle , i would like information on how to receive the software that be available . i divide this list into three basic area : 1 ) minimum requirement for linguist , 2 ) minimum requirement for grammar checkers , foreign language tutor software , and other more secular use of syntax , and 3 ) minimum requirement for translation technology . i . minimum requirement for linguist . a program or a theory of syntax that be to be program must minimally be able to : 1 ) provide a full label bracket of any string ( include information about intermediate and maximal level node ) . 2 ) provide the part of speech of all item in a string 3 ) provide the part of a sentence ( subject , direct object , etc ) of a string 4 ) provide acceptability judgement for sentence that can be parse ( e . g . john1 likes himself2 be parsable but unacceptable ) . 5 ) provide judgement about topicalize sentence , front wh question , tough - movement sentence , relative clause , noun clause , cleave and pseudo - cleave sentence , pie - pipe , the complex np constraint , control sentence , parasitic gap sentence , island condition , the that trace effect , the coreferrence requirement of pronoun and reciprocal , and strong and weak crossover effect . 6 ) perhap provide explanation for why particular parse fail . ii . minimum requirement for grammar checkers , foreign language tutor software , and other more secular use of syntax . a program or theory of syntax that be to be of value in these area should minimally : 1 ) provide information about part of speech 2 ) provide information about part of sentence ( subject , object , etc ) 3 ) provide demonstration of grammatical construction e . g . make passivesentence from active and active from passive , make question from statement , join two sentence into one use a variety of conjunction , transition and preposition . 4 ) provide judgement about error in the production of sentence 5 ) provide information about type of clause : subordinate / main , adverb , noun etc . 6 ) provide information about sentence type e . g . simple , complex , compound , etc . 7 ) analyze punctuation of word , phrase , and clause ( include coordination ) . minimum requirement for translation technology : 1 ) provide a correct parse for the subject language and provide a grammatically correct sentence in the target language . 2 ) provide acceptability judgement and other grammar check of sentence in both language . 3 ) be able to do convert some sentence in both language : e . g . statement to question , active to passive and so on . this list may be short in many way , but i think it illustrate my point . there be a lot more that could be happen in the realm of computational syntax , but it be not happen . if i be overly pessimistic , i would like to know where i can find software that can do the above . i will post all response to the list as a summary . also , if anyone would like to add to this list , i will keep track of the response and post them to the list . also , if someone can explain what prevent these development i would appreciate that as well . phil bralich bralich @ uhccux . uhcc . hawaius . edu
