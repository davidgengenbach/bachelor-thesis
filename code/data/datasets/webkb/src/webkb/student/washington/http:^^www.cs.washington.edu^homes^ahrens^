Date: Thu, 21 Nov 1996 23:06:21 GMT
Server: NCSA/1.4.2
Content-type: text/html
Last-modified: Thu, 29 Feb 1996 19:26:36 GMT
Content-length: 4071

<html>

<head>
<title>James Ahrens's Home Page</title>
</head>

<h3> James Ahrens's Home Page </h3>
<address> 
     Address: Computer Science & Engineering Department <br>
     University of Washington -- Box 352350 <br> 	
     Seattle, WA 98195 <br> <br>
     Email: ahrens@cs.washington.edu <br>
     Phone: (206) 543-3368 <br>
</address>

<hr>

<h3> Research Interests </h3>

<ul>
<li> <strong> Visualization, Parallel and Distributed Computing, Scientific Database Management </strong> <br><br> 

</ul>

<hr>

<h3> Projects </h3> 

<ul> <strong>
<li> <!WA0><a href="http://www.cs.washington.edu/homes/ahrens/DEVR"> University of Washington --- Database Environment for Vision Research </a> </strong> <br> <br>

<li> <strong> <!WA1><a href="http://www.acl.lanl.gov/Viz/viz-overview.html"> Los Alamos National Laboratory --- ACL Visualization Project </a> </strong> <br> 
     
</ul>

<hr>

<h3> Publications </h3>
<ul>
<strong>
James P. Ahrens and Charles D. Hansen, <!WA2><a href="http://www.cs.washington.edu/homes/ahrens/Publications/icpp95.ps"> Cost-Effective Data-Parallel Load Balancing </a>, <em> International Conference on Parallel Processing</em>, August 1995.
</strong>
<br>
<br>
Load balancing algorithms typically improve a program's performance on
unbalanced datasets, but degrade its performance on balanced datasets,
because unnecessary load redistributions occur. This paper presents a
<em> cost-effective </em> data-parallel load balancing algorithm which
performs load redistributions only when the possible savings outweigh
the redistribution costs. Experiments with a data-parallel polygon
renderer show a performance improvement of up to a factor of 34 on
unbalanced datasets and a performance loss of only 27 percent on
balanced datasets when using this algorithm. 
<br>
<br>
<strong>
Linda G. Shapiro, Steven L. Tanimoto, James F. Brinkley, James P. Ahrens,
 Rex M. Jakobovits and Lara M. Lewis, <!WA3><a href="http://www.cs.washington.edu/homes/ahrens/Publications/Katsu93/katsu93.ps"> A Visual Database System for Data and Experiment Management in Model-Based Computer Vision</a>, <em> Proceedings of the Second CAD-Based Vision Workshop</em>, February 1994.
</strong>
<br>
<br>
This paper presents the design of a visual database system for data and experiment management. Our system was designed as a general scientific database system, but motivated by and intended for use in model-based computer vision. We provide a unified data model, a highly graphical user interface, an advanced query facility and an interactive laboratory notebook. The system aids in scientific experimentation and promote data sharing in the computer vision community.
<br>
<br>
<strong>
Frank A. Ortega, Charles D. Hansen and James P. Ahrens, <!WA4><a href="http://www.acl.lanl.gov/Viz/sc93_paper.ps"> Fast Data Parallel Polygon Rendering </a>, <em> Supercomputing</em>, November 1993.
</strong>
<br>
<br>
This paper describes a data parallel method for polygon rendering on a massively parallel machine. This method, based on a simple shading model, is targeted for applications which require very fast rendering for extremely large sets of polygons. Such sets are found in many scientific visualization applications. The renderer can handle arbitrarily complex polygons which need not be meshed. Issues involving load balancing are addressed and a data parallel load balancing algorithm is presented. This rendering toolkit enables a scientist to display 3D shaded polygons directly from a parallel machine avoiding the transmission of huge amounts of data to a post-processing rendering system.
<br>
<br>

<strong>
James P. Ahrens and Charles D. Hansen, <!WA5><a
href=ftp://ftp.cs.washington.edu/tr/1995/04/UW-CSE-95-04-02.PS.Z>
Cost-Effective Data-Parallel Load Balancing</a>, University of
Washington, Department of Computer Science and Engineering, TR
#95-04-02, April 1995. 
</strong>
<br>
<br>
A longer version of the ICPP paper which also describes a fast data-parallel 
load redistribution algorithm.
</ul> 

</body>

<p> <hr>
<address>
Last modified: 2/22/96 
</address>
<hr>

</html>

