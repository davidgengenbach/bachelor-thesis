Date: Thu, 21 Nov 1996 20:23:06 GMT
Server: NCSA/1.4.2
Content-type: text/html
Last-modified: Sat, 27 Apr 1996 20:17:28 GMT
Content-length: 4613

<HEAD>
<TITLE>Nancy Leveson's Home Page</TITLE>
</HEAD>
</TITLE>
</HEAD>
<body bgcolor="#bcd2ee">
<!--<body bgcolor="#36648b" text="#ffffff" alink="#c0c0c0" vlink="#bfbfbf"> -->
 <!-- this is steelblue4; white; gray; gray75 ; lightsteelblue2 is "bcd2ee" -->
<H1>Nancy Leveson</H1>

<hr>

<dl>
<dd>Department of Computer Science & Engineering
<dd>University of Washington
<dd>Box 352350 [express mail: Sieg Hall 114]
<dd>Seattle, WA  98195-2350  USA
<dd> +1.206.685.1934
<dd> +1.206.543.2969 [FAX]
<dd> leveson@cs.washington.edu
</dl>

<hr>

<BODY><P>
 <b> Nancy Leveson</b>, Professor, joined the faculty in 1993, coming from 
California in search of rain.   She received all her degrees, in math
and computer science, from UCLA (Ph.D., 1980) and spent her formative 
years being a professor at the University of California, Irvine.
<P>
Professor Leveson started a new area of research, software safety, which is 
concerned with the problems of building software for real-time systems 
where failures can result in loss of life or property.  One advantage of 
this topic is that nobody questions its goals, except for a few misanthropes
(who don't matter anyway).  She and her students have recently produced a
formal requirements specification for TCAS II, a real collision-avoidance 
system required on all commercial aircraft in U.S. airspace.  One of the 
lessons she has learned from this project is never to do anything like it 
again.  The FAA seems pleased with it though and has adopted it as their
official specification.  She and her students are currently working on 
doing a safety analysis of the specified behavior of TCAS.  She claims that
you should not read anything into the fact that she has been taking the train 
a lot lately.  
The <!WA0><!WA0><!WA0><a href="http://www.cs.washington.edu/research/projects/safety/www">Safety
Research Project</a> is now also working on modeling and analysis of 
automated highways, automobiles,
and various aerospace systems.  Subtopics in this research area include 
modeling and analysis of safety, specification, safe software design, 
software fault tolerance, and verification and validation of safety.
<P>
Professor Leveson is Editor-in-Chief of IEEE Transactions on Software
Engineering, an elected member of the Board of Directors of the Computing
Research Association, a member of the National Research Council Commission
on Engineering and Technical Systems, and a member of the ACM Committee on 
Computers and Public Policy.  Recently she chaired a National Research 
Council study evaluating the Space Shuttle software process.  Dr. Leveson
is a Fellow of the ACM and was awarded the 1995 AIAA Information Systems
Award for contributions in space and aeronautics computer technology and
science for "developing the field of software safety and for promoting
responsible software and system engineering practices where life and property
are at stake."
<P>
This year, Dr. Leveson's new book on software safety, 
<!WA1><!WA1><!WA1><a href="http://www.cs.washington.edu/research/projects/safety/www/book.html">
(Safeware: System Safety and Computers, Addison-Wesley, 1995)</a> was 
published.  <!WA2><!WA2><!WA2><a href="http://www.cs.washington.edu/research/projects/safety/www">Recent papers</a> are available via the web and a list of <!WA3><!WA3><!WA3><a href="http://www.cs.washington.edu/research/projects/safety/www/safety_bib"> other papers</a> is
also available.  For a copy of my favorite paper (which was actually a keynote
address at the Int. Conf. on Software Engineering in Melbourne) titled
"High-Pressure Steam Engines and Computer Software", click <!WA4><!WA4><!WA4><a href="http://www.cs.washington.edu/research/projects/safety/www/papers/steam.ps"> here</a>.
<P>
Quals projects are available on the following topics: (1) applying hazard
analysis techniques to an aircraft collision avoidance system model written
in a state-machine-style language (called RSML), (2) determining ways to build 
fault trees or other analyses from RSML models in general, (3) designing new
requirements specification languages (including specifying the human-computer 
interface) and deriving general principles for designing such languages, 
(4) applying hazard analysis to human-machine interface models, (5) modeling 
the human-machine interface in control systems (e.g., an aircraft cockpit), 
and (6) analyzing aircraft accident reports (involving mode awareness problems
and other general HCI issues) to derive information about safe design of 
human-computer interaction.
<P>
Try finger (finger leveson@cs.washington.edu) for information about which 
city (or airport) I am currently in and perhaps how to contact me.  
<P>

</BODY>
