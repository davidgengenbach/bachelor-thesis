Date: Tuesday, 26-Nov-96 00:53:54 GMT
Server: NCSA/1.3
MIME-version: 1.0
Content-type: text/html
Last-modified: Tuesday, 30-Jan-96 22:24:31 GMT
Content-length: 4031

<HEAD>
<TITLE>Declarative Logic Programming Research Project</TITLE>
</HEAD>

<BODY>
<CENTER>
<H3>
Research Project
</H3>
<H2>
Specialized, Fully Declarative Logic Programming 
Languages for Expert Systems and Databases
</H2>
</CENTER>

<!WA0><A HREF="http://www.cise.nsf.gov/cise/IRIS/DBEShome.html">NSF</A> 
Grant: IRI-9308970</BR>
Starting Date: August 16, 1993</BR>
In progress.</BR></BR>

<STRONG>Researchers</STRONG></BR>
<!WA1><A HREF="http://www.cs.miami.edu:80/~stephen">Stephen Murrell</A>
   (co-principal investigator)</BR>
<!WA2><A HREF="http://www.cs.miami.edu:80/~janplaza">Jan Plaza</A>
   (co-principal investigator)</BR>

George Holler (graduate assistant, fall-spring '95)</BR>
Eric Gotlieb (graduate assistant, summer '94)</BR>
Sidong Liu (graduate assistant, summer '94)</BR></BR>


<STRONG>Introduction</STRONG><BR>
The style of traditional programming is <em>imperative</em>:
a program instructs the computer
<em>how</em> to accomplish a task, for instance, how to sort a list.
On the other hand, logic programming opens a possibility of <em>declarative</em>
programming, i.e. writing programs which just tell the computer
<em>what</em> final state is desired, for instance, 
what is meant by a sorted list. A logic program should be written 
as a set of logical definitions (declarations, specifications.) 
The same program should be interpreted by a computer as a set of imperative procedures. After the program is ready, the programmer may wish to consider its imperative meaning, and add control structures to improve the efficiency.
<P>
This research project is concerned with designing a logic programming 
system which could offer the programmer a wide expressive power 
and minimize the need for thinking about the procedural meaning of the
program. It includes the development of a theory and an experimental
implementation.
<BR><BR>

<STRONG>Abstract</STRONG></BR>

We propose creating a family of logic programming languages -- one for
general purpose programming, and the others <em>specialized</em> and aimed
at major application areas of artificial intelligence. The languages
will be <em>fully declarative</em>, and based on <em>solid mathematical
foundations</em>.
<P>
The language for general purpose programming  will admit (unlike
PROLOG) <em>extended syntax</em>: general quantifiers, and a functional
form of classical negation. This language will be the basis from which
the others are developed.  The language for expert systems will have
<em>intrinsic</em> support for non-numerical measures of confidence, and
formal mechanisms for handling hierarchies of contradictions.  The
language for deductive databases will support multiple open and closed
domains and <em>efficient</em> query evaluation.  The fourth language will combine features of the previous two will be
suitable for <em>distributed</em> multi-component intelligent systems.  The languages will have a potential for <em>parallelization</em>.
<P>
No languages with such features currently exist, and we believe that
their availability  would have a desirable impact on the construction
of future intelligent systems.</BR></BR>

<STRONG> 
Further Information
</STRONG><BR>

You can read or download related
<!WA3><A HREF="http://www.cs.miami.edu:80/~janplaza/logic_programming/theory/00-INDEX.html">papers</A>.</BR>

You can download and try a preliminary version of the 
<!WA4><A HREF="http://www.cs.miami.edu:80/~janplaza/logic_programming/logos/">LOGOS</A>
programming language which is being implemented as a part of this project.</BR>

You can look at the current research  
<!WA5><A HREF="http://www.cs.miami.edu:80/~janplaza/logic_programming/2-Topics.html">topics</A>.
</BR>

A series of 
<!WA6><A HREF="http://www.cs.miami.edu:80/~janplaza/logic_programming/3-Seminars.html">seminars</A> 
is offered as a part of this project.</BR>

The following
<!WA7><A HREF="http://www.cs.miami.edu:80/~janplaza/logic_programming/4-Software.html">logic programming software</A> is available at the 
<!WA8><A HREF="http://www.cs.miami.edu/">department.</A>
</BR>

You can also access the home page of 
<!WA9><A HREF="http://al.cs.engr.uky.edu/~lpnmr">LPNMR</A>
-- a forum for exchange of information on logic programming and 
non-monotonic reasoning.  
</BR>

</BODY>
