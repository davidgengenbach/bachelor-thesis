Date: Thu, 21 Nov 1996 22:22:36 GMT
Server: NCSA/1.4.2
Content-type: text/html

<HTML>
<head>
<title>CSE 403X Home Page</title>

</head>
<body>
<h1>CSE 403X: Experimental UW/Boeing Software Engineering Project Course</h1>

<H2> 
Professor: <A HREF="http://www.cs.washington.edu/homes/leveson/index.html/">Nancy Leveson</A>
</H2>
<UL>
<LI> Office: Sieg 219
<LI> Phone: 685-1934
<LI> Hours: by appointment
<LI> Mail: <a href="mailto:leveson@cs.washington.edu">leveson@cs.washington.edu</a>
</UL>

<H2>Course Description</H2>

Instructional Objectives:
<UL>
<LI> Teaching the terminology and concepts of software engineering.
<LI> Teaching the fundamentals of software project management and working in a team.
<LI> Providing experience with a real industrial software engineering project.
<LI> Teaching oral and written communication skills.
<LI> Producing a ``portfolio.''
</UL>

<p>
This course will study the concepts, methods, and tools for the specification,
design, construction, testing (analysis), and documentation of large software
systems.  Included also will be ``non-technical'' topics essential to
creating complex software systems successfully: project management, effective
oral and written communication, and group interaction.  These latter topics
are what most industrial feedback says are the most important to employers
and are the most often lacking in our graduates.<p>

<p>
This experimental version of CSE 403, lasting two quarters, will use a real
Boeing project as an example, and the participants will work in one large
group.  There are several reasons for trying this new approach.  The first is
that one quarter is too short for a realistic project so students cannot
learn enough about software engineering due to class sessions being devoted
to discussing and organizing the project.  In the regular 403 class, the
group projects are also usually learning experiences about how hard it is
to work in a group, but not enough is learned about how to work effectively
together.  By having one group headed by the instructor, disasters can be
avoided and more experience can be provided in the correct way to work
together.  In addition, students will get experience in requirements
analysis and a real software development that is not possible in the
normal class setting.<p>

<p>
At the end of the two quarters, students will have a ``portfolio'' of a
real software engineering project that they can use in their job search.
An example of such a portfolio, done for the CMU Software Engineering
Institute's Masters of Software Engineering program, will be provided
at the first class meeting.<p>

<p>
In the class, each student will be assigned a specific ``role'' to play
that will allow them to experience a leadership position (see attached list
of roles).  However, everyone will participate in each phase of the project
so they can learn how to do each part.  The instructor will act as the
project manager.<p>

<P>

<hr> 
<H2>Outline of Topics</H2>
<UL>
<LI> Nature, qualities, and principles of software and software engineering.
<LI> Management of software projects: process models, working in groups,
      project planning, risk assessment, cost estimation, metrics, etc.
<LI> Requirements analysis
<LI> Specification
<LI> Software design
<LI> Verification and validation (testing and analysis)
<LI> Configuration management
<LI> Reviews
<LI> Maintenance, evolution
<LI> Reuse 
<LI> Ethics and professionalism in software engineering
<LI> Embedded systems and safety
</UL>

<hr> 
<h2>Roles for Class Project</h2> 

Each student will take one of these leadership roles for the project.  
However, everyone will participate in each activity or in reviews of
the activity so that they get experience with each aspect of a software
development team.  In addition, each class member will be responsible
for a presentation at a Boeing review meeting.
<UL>

<p>
<LI> Project Administrator/Assistant Program Manager: 
    Responsible for project planning and control.  Primary duties
    include writing and updating the project management plan, tracking the
    project status, making sure that the proper meetings are held and that
    the work gets done on time. 

<p>
<LI> Principal Architect: 
    Responsible for the creation of the software product.  Primary 
    responsibilities include the overall consistency of the design, 
    hardware and software platform issues, transition planning.

<p>
<LI> Designer 1:
    Responsible for the existing system.  Primary duties include learning 
    about it, augmenting the documentation on it if necessary, evaluating 
    the current systems. 
 
<p>
<LI>  Designer 2: 
    Primary responsibility is organizing the development of the new 
    system design.

<p>
<LI>  Configuration and Security Manager:
    Responsible for change control and security.  Primary duties include 
    writing the configuration management plan, setting up a configuration 
    management system for the project, document control, organizing changes
    to the document, ensuring new design is secure.

<p>
<LI>  Human Factors Specialist: 
    Responsible for user interfaces and interactions.  Duties include
    design of human interface, evaluation of it with respect to requirements,
    planning user surveys and interviews with Boeing employees.

<p>
<LI>  Quality Assurance Specialist:
    Responsible for the overall quality of the released product.  Primary
    duries include conducting reviews of products, ensuring that design has
    required characteristics, conducting reviews of the deliverables, and 
    other normal quality assurance duties.

<p>
<LI>  Programming Manager: 
    Responsible for the mockups and prototypes.  Primary duties are 
    to provide expertise on programming languages and implementation,
    organize the development of prototypes and mockups, and handle
    www technical issues. 

<p>
<LI>  Documentation Specialist: 
    Responsible for the appearance and clarity of all documentation 
    and for the creation of user manuals.  Duties include determining
    what tools will be used and providing expertise on them, making 
    deliverable documents readable and understandable, and planning
    user support for the new system.

<p>
<LI>  Maintenance and Reliability Engineer:
    Primary responsibility is creating a guide for the maintenance of the
    delivered product and a reliability plan.
</UL>

</ul>

</body>
</html>
