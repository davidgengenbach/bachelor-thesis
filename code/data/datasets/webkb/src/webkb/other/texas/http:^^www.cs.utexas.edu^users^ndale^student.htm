MIME-Version: 1.0
Server: CERN/3.0
Date: Tuesday, 07-Jan-97 15:28:03 GMT
Content-Type: text/html
Content-Length: 7916
Last-Modified: Tuesday, 20-Aug-96 17:10:55 GMT

<html>
<head>
<title>NDale Dissertations Page</title>
</head>
<BODY BGCOLOR="#FFFFFF" TEXT="#000040">
<!WA0><!WA0><!WA0><!WA0><!WA0><A HREF="mailto:ndale@cs.utexas.edu">
<!WA1><!WA1><!WA1><!WA1><!WA1><IMG SRC="http://www.cs.utexas.edu/users/ndale/ndale.gif" BORDER=3 ALIGN=RIGHT ALT="DALE IMAGE"></A>
<H2>Professor Nell B. Dale:<br>Dissertations</H2>
<p>
<!WA2><!WA2><!WA2><!WA2><!WA2><A HREF="http://www.cs.utexas.edu/"><b>University of Texas Computer Science Department</b></A><br>
<br><br>
The five dissertations listed here illustrate my own research efforts in computer science education as reflected in the work of five of my graduate students in Computer Science Education.<br><!WA3><!WA3><!WA3><!WA3><!WA3><A HREF="mailto:ndale@cs.utexas.edu">Nell B. Dale</A>
<br><br>
<UL>
<LI><!WA4><!WA4><!WA4><!WA4><!WA4><A HREF="#a"><b>Anchir
Angel Syang</b></A>
<LI><!WA5><!WA5><!WA5><!WA5><!WA5><A HREF="#b"><b> Debra Lynn Burton</b></A>
<LI><!WA6><!WA6><!WA6><!WA6><!WA6><A HREF="#c"><b>Cheng-
Chih Wu</b></A>
<LI><!WA7><!WA7><!WA7><!WA7><!WA7><A HREF="#d"><b>Vicki
Lynn Almstrum</b></A>
<LI><!WA8><!WA8><!WA8><!WA8><!WA8><A HREF="#e"><b>Youngju Kim</b></A>
</UL>
<br><br>


<b>A <A NAME="a">Quantitative</A> Student Model for Intelligent Tutoring
Systems: <br>Student Programming Ability, </b><br><!WA9><!WA9><!WA9><!WA9><!WA9><A HREF="mailto:angel.syang@polaris.dhs.state.tx.us">Anchir
Angel Syang</A><b>, 1994.</b><br><br>
Intelligent tutoring systems are made up of the
subject matter to be taught, a student model (the
method of representing what a student knows and does
not know), and tutoring strategies.  The purpose of
this research was to develop a quantitative model to
measure programming abilities of students who have
completed the first course in computer science.  This
model could then be used as the student model in an
intelligent tutoring system.  The framework of the
study was to analyze and compare several models,
including four from classical testing theory and one
from item response theory.<br><br>
Performance data was based on the responses of 315
students to 50 questions covering the programming
concepts of CS1  The course grade prior to the final
exam was used as the basis for comparing the
different models.<br><br>
The results showed that the model proposed in the
study is feasible and could be used to develop a
computerized adaptive test based on item response
theory.  Such a test could form the basis for a student
model in an intelligent tutoring system for computer
programming.
<br><br>

<b>The <A NAME="b">Effect</A> of Closed Laboratory Activities on the
Comprehension of Five Concepts and the Perception
of Effectiveness of the Course in a Second Semester
Computer Science Course,</b><!WA10><!WA10><!WA10><!WA10><!WA10><A HREF="mailto:debra-burton@tamucc.edu"> Debra Lynn Burton</A><b>, 1992.</b>
<br><br>
There are several possible definitions of closed
laboratory; for this study the following definition was
used:  an assignment to be completed within a
specified time period in a room of computers reserved
for this purpose.  The issue addressed in the research
was: Are closed laboratory activities effective in
improving the comprehension of computer science
concepts?<br><br>
The concepts measured in this experiment were
algorithm complexity, stacks, queues, recursion, and
sorting.  The experiment was conducted in CS2
classes where there were large lecture sections and
smaller weekly discussion sections.  For five of the
fifteen weeks of the semester, half of the discussion
sections did closed laboratory activities on the week's
concepts while the other half did a comparable paper
and pencil exercise.  A pretest was used to remove
bias due to initial differences in comprehension.  125
students completed the study.  The results showed no
significant difference in the comprehension of the five
concepts between the students who participated in the
closed laboratory activities and those students who did
paper and pencil exercises.
<br><br>

<b><A NAME="c">Conceptual</A> Models and Individual Cognitive Learning
Styles in Teaching Recursion to Novices, </b><!WA11><!WA11><!WA11><!WA11><!WA11><A HREF="mailto:chihwu@ice.ntnu.edu.tw">Cheng-
Chih Wu</A><b>, 1993.</b>
<br><br>
Most novice students have trouble learning recursion.
The purpose of this study was to examine whether the
method of presentation (concrete or abstract) affected
how students learned recursion and to determine the
role played by the students' own learning styles.<br><br>
The sample was made up of 209 students enrolled in a
CS1 course.  Each student took the Kolb Learning
Styles Inventory, which categorizes the student's
cognitive learning style as concrete or abstract.  Two
models of presenting recursion were devised, one
concrete and one abstract.  The students were tested
over the material immediately following the lecture,
two weeks later, and six weeks later.<br><br>
The results showed that concrete models were superior
to abstract models and abstract learners did better than
concrete learners.  No interaction effect was found
between a student's learning style and the presentation
model.

<br><br>

<b><A NAME="d">Limitations</A> in the Understanding of Mathematical
Logic by Novice Computer Science Students,</b><!WA12><!WA12><!WA12><!WA12><!WA12><A HREF="mailto:aimsrtum@cs.utexas.edu"> Vicki
Lynn Almstrum</A><b>, 1994.</b>

<br><br>

This study sought objective evidence that computer
science students have more difficulty understanding
concepts in the subdomain of mathematical logic than
they do in other areas of computer science.  The data
used for the study were the multiple-choice questions
of five Advanced Placement Examinations in
Computer Science.<br><br>
There were two main parts to this study:  determining
which questions related to logic and comparing
student performance on those questions related to
logic and those questions with little or no
relationship to logic.  Thirty eight university and
high school instructors, most of whom taught at the
CS1 level, participated in a content analysis of the
questions.  The results of the content analysis were
used to partition the questions into those strongly
related  to logic and those not strongly related to
logic.  The questions in the strongly related partition
had lower means and standard deviations than the
questions in the not strongly related partition.  The
difficulty distributions defined by the two sets of
items were not the same.  These results substantiate
the hypothesis that computer science concepts related
to logic are generally more difficult for novice
students.<br><br>

<b>The <A NAME="e">Reasoning</A> Ability and Achievement of College
Level Students Enrolled in a Logic Class in
Computer Science, </b><!WA13><!WA13><!WA13><!WA13><!WA13><A HREF="mailto:kim@cs.utexas.edu">Youngju Kim</A><b>, 1995.</b>

<br><br>
The Propositional Logic Test (PLT) is a 16-item
instrument used to measure a student's ability to use
the propositional operations in conditional reasoning.
This research considered the following questions:
What is the relationship between a student's score on
the PLT and his or her achievement in a logic class
and does taking a logic class improve a student's score
on the PLT?<br><br>
The PLT was given on the first and last days of class
in a logic course designed for computer science
majors.  The first day PLT score predicted the
midterm grade (N = 163, p = .002) and the final
course grade (N = 156, p = .005).  Although the
average score on the PLT improved from the first day
(12.33) to the last day (12.95), there was no
statistical difference before and after taking a logic
class.<br><br><br>
<CENTER><H3>
<!WA14><!WA14><!WA14><!WA14><!WA14><A HREF="http://www.cs.utexas.edu/users/ndale/books.htm">Books</A> ** 
<!WA15><!WA15><!WA15><!WA15><!WA15><A HREF="http://www.cs.utexas.edu/users/ndale/">Main</A> ** 
<!WA16><!WA16><!WA16><!WA16><!WA16><A HREF="http://www.cs.utexas.edu/users/ndale/profile.htm">Profile</A> **  
<!WA17><!WA17><!WA17><!WA17><!WA17><A HREF="http://www.cs.utexas.edu/users/ndale/student.htm">Students</A> **
<!WA18><!WA18><!WA18><!WA18><!WA18><A HREF="mailto:ndale.@cs.utexas.edu">Mail</A>
</H3></CENTER>
<p><HR ALIGN="CENTER" WIDTH="100%" SIZE="2"><!WA19><!WA19><!WA19><!WA19><!WA19><A HREF="mailto:ndale@cs.utexas.edu">
<center><FONT size="-1">Nell B. Dale, 1200 Westlake Dr., Austin, Tx. 78746 (fax-office) 512-471-8885</FONT></center></A><br>
</body>
</html>
<hr><FONT SIZE="-1">This document was created with the assistance of<br><!WA20><!WA20><!WA20><!WA20><!WA20><a href="http://www.eden.com/~smejkal">F.J.S.I.Services</a></FONT>